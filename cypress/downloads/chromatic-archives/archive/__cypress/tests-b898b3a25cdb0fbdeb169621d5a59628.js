/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
var __webpack_exports__ = {};
/*!*********************************!*\
  !*** ./cypress/e2e/login.cy.js ***!
  \*********************************/


describe("template spec", () => {
  /* ==== Test Created with Cypress Studio ==== */
  it("login user", function () {
    /* ==== Generated with Cypress Studio ==== */
    cy.visit("http://localhost:3000");
    cy.wait(500);

    // Take a snapshot of the initial page load
    cy.document().toMatchImageSnapshot();
    cy.get("#join-us-button").click();

    // Take a snapshot after clicking join
    cy.document().toMatchImageSnapshot();
    cy.get(".input-field").clear("example@test.com");
    cy.get(".input-field").type("example@test.com");
    cy.get("#submit-button > .gradient").click();

    // Take a snapshot after submitting the email
    cy.document().toMatchImageSnapshot();
    cy.get(".flex-col > .gap-2 > .flex").click();
    cy.get('[data-testid="name-input"] > .input-field').clear("t");
    cy.get('[data-testid="name-input"] > .input-field').type("test");
    cy.get('[data-testid="surname-input"] > .input-field').clear("u");
    cy.get('[data-testid="surname-input"] > .input-field').type("user");
    cy.get('[data-testid="password-input"] > .input-field').clear("p");
    cy.get('[data-testid="password-input"] > .input-field').type("paswword");
    cy.get('[data-testid="confirm-password-input"] > .input-field').clear("p");
    cy.get('[data-testid="confirm-password-input"] > .input-field').type("password");
    cy.get("#submit-button > .gradient").click();

    // Take a snapshot after submitting the form
    cy.document().toMatchImageSnapshot();
    cy.get('[data-testid="code-input-0"]').clear("1");
    cy.get('[data-testid="code-input-0"]').type("1");
    cy.get('[data-testid="code-input-1"]').clear("2");
    cy.get('[data-testid="code-input-1"]').type("2");
    cy.get('[data-testid="code-input-2"]').clear("3");
    cy.get('[data-testid="code-input-2"]').type("3");
    cy.get('[data-testid="code-input-3"]').clear("4");
    cy.get('[data-testid="code-input-3"]').type("4");
    cy.get('[data-testid="code-input-4"]').clear("5");
    cy.get('[data-testid="code-input-4"]').type("5");
    cy.get('[data-testid="code-input-5"]').clear("6");
    cy.get('[data-testid="code-input-5"]').type("6");
    cy.get("#submit-button > .gradient").click();

    // Take a final snapshot after submitting the verification code
    cy.document().toMatchImageSnapshot();

    /* ==== End Cypress Studio ==== */
  });
});
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9naW4uY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQUEsUUFBUSxDQUFDLGVBQWUsRUFBRSxNQUFNO0VBQzlCO0VBQ0FDLEVBQUUsQ0FBQyxZQUFZLEVBQUUsWUFBVztJQUMxQjtJQUNBQyxFQUFFLENBQUNDLEtBQUssQ0FBQyx1QkFBdUIsQ0FBQztJQUNqQ0QsRUFBRSxDQUFDRSxJQUFJLENBQUMsR0FBRyxDQUFDOztJQUVaO0lBQ0FGLEVBQUUsQ0FBQ0csUUFBUSxDQUFDLENBQUMsQ0FBQ0Msb0JBQW9CLENBQUMsQ0FBQztJQUVwQ0osRUFBRSxDQUFDSyxHQUFHLENBQUMsaUJBQWlCLENBQUMsQ0FBQ0MsS0FBSyxDQUFDLENBQUM7O0lBRWpDO0lBQ0FOLEVBQUUsQ0FBQ0csUUFBUSxDQUFDLENBQUMsQ0FBQ0Msb0JBQW9CLENBQUMsQ0FBQztJQUVwQ0osRUFBRSxDQUFDSyxHQUFHLENBQUMsY0FBYyxDQUFDLENBQUNFLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQztJQUNoRFAsRUFBRSxDQUFDSyxHQUFHLENBQUMsY0FBYyxDQUFDLENBQUNHLElBQUksQ0FBQyxrQkFBa0IsQ0FBQztJQUMvQ1IsRUFBRSxDQUFDSyxHQUFHLENBQUMsNEJBQTRCLENBQUMsQ0FBQ0MsS0FBSyxDQUFDLENBQUM7O0lBRTVDO0lBQ0FOLEVBQUUsQ0FBQ0csUUFBUSxDQUFDLENBQUMsQ0FBQ0Msb0JBQW9CLENBQUMsQ0FBQztJQUVwQ0osRUFBRSxDQUFDSyxHQUFHLENBQUMsNEJBQTRCLENBQUMsQ0FBQ0MsS0FBSyxDQUFDLENBQUM7SUFDNUNOLEVBQUUsQ0FBQ0ssR0FBRyxDQUFDLDJDQUEyQyxDQUFDLENBQUNFLEtBQUssQ0FBQyxHQUFHLENBQUM7SUFDOURQLEVBQUUsQ0FBQ0ssR0FBRyxDQUFDLDJDQUEyQyxDQUFDLENBQUNHLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDaEVSLEVBQUUsQ0FBQ0ssR0FBRyxDQUFDLDhDQUE4QyxDQUFDLENBQUNFLEtBQUssQ0FBQyxHQUFHLENBQUM7SUFDakVQLEVBQUUsQ0FBQ0ssR0FBRyxDQUFDLDhDQUE4QyxDQUFDLENBQUNHLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDbkVSLEVBQUUsQ0FBQ0ssR0FBRyxDQUFDLCtDQUErQyxDQUFDLENBQUNFLEtBQUssQ0FBQyxHQUFHLENBQUM7SUFDbEVQLEVBQUUsQ0FBQ0ssR0FBRyxDQUFDLCtDQUErQyxDQUFDLENBQUNHLElBQUksQ0FBQyxVQUFVLENBQUM7SUFDeEVSLEVBQUUsQ0FBQ0ssR0FBRyxDQUFDLHVEQUF1RCxDQUFDLENBQUNFLEtBQUssQ0FBQyxHQUFHLENBQUM7SUFDMUVQLEVBQUUsQ0FBQ0ssR0FBRyxDQUFDLHVEQUF1RCxDQUFDLENBQUNHLElBQUksQ0FDbEUsVUFDRixDQUFDO0lBQ0RSLEVBQUUsQ0FBQ0ssR0FBRyxDQUFDLDRCQUE0QixDQUFDLENBQUNDLEtBQUssQ0FBQyxDQUFDOztJQUU1QztJQUNBTixFQUFFLENBQUNHLFFBQVEsQ0FBQyxDQUFDLENBQUNDLG9CQUFvQixDQUFDLENBQUM7SUFFcENKLEVBQUUsQ0FBQ0ssR0FBRyxDQUFDLDhCQUE4QixDQUFDLENBQUNFLEtBQUssQ0FBQyxHQUFHLENBQUM7SUFDakRQLEVBQUUsQ0FBQ0ssR0FBRyxDQUFDLDhCQUE4QixDQUFDLENBQUNHLElBQUksQ0FBQyxHQUFHLENBQUM7SUFDaERSLEVBQUUsQ0FBQ0ssR0FBRyxDQUFDLDhCQUE4QixDQUFDLENBQUNFLEtBQUssQ0FBQyxHQUFHLENBQUM7SUFDakRQLEVBQUUsQ0FBQ0ssR0FBRyxDQUFDLDhCQUE4QixDQUFDLENBQUNHLElBQUksQ0FBQyxHQUFHLENBQUM7SUFDaERSLEVBQUUsQ0FBQ0ssR0FBRyxDQUFDLDhCQUE4QixDQUFDLENBQUNFLEtBQUssQ0FBQyxHQUFHLENBQUM7SUFDakRQLEVBQUUsQ0FBQ0ssR0FBRyxDQUFDLDhCQUE4QixDQUFDLENBQUNHLElBQUksQ0FBQyxHQUFHLENBQUM7SUFDaERSLEVBQUUsQ0FBQ0ssR0FBRyxDQUFDLDhCQUE4QixDQUFDLENBQUNFLEtBQUssQ0FBQyxHQUFHLENBQUM7SUFDakRQLEVBQUUsQ0FBQ0ssR0FBRyxDQUFDLDhCQUE4QixDQUFDLENBQUNHLElBQUksQ0FBQyxHQUFHLENBQUM7SUFDaERSLEVBQUUsQ0FBQ0ssR0FBRyxDQUFDLDhCQUE4QixDQUFDLENBQUNFLEtBQUssQ0FBQyxHQUFHLENBQUM7SUFDakRQLEVBQUUsQ0FBQ0ssR0FBRyxDQUFDLDhCQUE4QixDQUFDLENBQUNHLElBQUksQ0FBQyxHQUFHLENBQUM7SUFDaERSLEVBQUUsQ0FBQ0ssR0FBRyxDQUFDLDhCQUE4QixDQUFDLENBQUNFLEtBQUssQ0FBQyxHQUFHLENBQUM7SUFDakRQLEVBQUUsQ0FBQ0ssR0FBRyxDQUFDLDhCQUE4QixDQUFDLENBQUNHLElBQUksQ0FBQyxHQUFHLENBQUM7SUFDaERSLEVBQUUsQ0FBQ0ssR0FBRyxDQUFDLDRCQUE0QixDQUFDLENBQUNDLEtBQUssQ0FBQyxDQUFDOztJQUU1QztJQUNBTixFQUFFLENBQUNHLFFBQVEsQ0FBQyxDQUFDLENBQUNDLG9CQUFvQixDQUFDLENBQUM7O0lBRXBDO0VBQ0YsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFDLEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9udXh0LWFwcC8uL2N5cHJlc3MvZTJlL2xvZ2luLmN5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImRlc2NyaWJlKFwidGVtcGxhdGUgc3BlY1wiLCAoKSA9PiB7XG4gIC8qID09PT0gVGVzdCBDcmVhdGVkIHdpdGggQ3lwcmVzcyBTdHVkaW8gPT09PSAqL1xuICBpdChcImxvZ2luIHVzZXJcIiwgZnVuY3Rpb24oKSB7XG4gICAgLyogPT09PSBHZW5lcmF0ZWQgd2l0aCBDeXByZXNzIFN0dWRpbyA9PT09ICovXG4gICAgY3kudmlzaXQoXCJodHRwOi8vbG9jYWxob3N0OjMwMDBcIik7XG4gICAgY3kud2FpdCg1MDApO1xuXG4gICAgLy8gVGFrZSBhIHNuYXBzaG90IG9mIHRoZSBpbml0aWFsIHBhZ2UgbG9hZFxuICAgIGN5LmRvY3VtZW50KCkudG9NYXRjaEltYWdlU25hcHNob3QoKTtcblxuICAgIGN5LmdldChcIiNqb2luLXVzLWJ1dHRvblwiKS5jbGljaygpO1xuXG4gICAgLy8gVGFrZSBhIHNuYXBzaG90IGFmdGVyIGNsaWNraW5nIGpvaW5cbiAgICBjeS5kb2N1bWVudCgpLnRvTWF0Y2hJbWFnZVNuYXBzaG90KCk7XG5cbiAgICBjeS5nZXQoXCIuaW5wdXQtZmllbGRcIikuY2xlYXIoXCJleGFtcGxlQHRlc3QuY29tXCIpO1xuICAgIGN5LmdldChcIi5pbnB1dC1maWVsZFwiKS50eXBlKFwiZXhhbXBsZUB0ZXN0LmNvbVwiKTtcbiAgICBjeS5nZXQoXCIjc3VibWl0LWJ1dHRvbiA+IC5ncmFkaWVudFwiKS5jbGljaygpO1xuXG4gICAgLy8gVGFrZSBhIHNuYXBzaG90IGFmdGVyIHN1Ym1pdHRpbmcgdGhlIGVtYWlsXG4gICAgY3kuZG9jdW1lbnQoKS50b01hdGNoSW1hZ2VTbmFwc2hvdCgpO1xuXG4gICAgY3kuZ2V0KFwiLmZsZXgtY29sID4gLmdhcC0yID4gLmZsZXhcIikuY2xpY2soKTtcbiAgICBjeS5nZXQoJ1tkYXRhLXRlc3RpZD1cIm5hbWUtaW5wdXRcIl0gPiAuaW5wdXQtZmllbGQnKS5jbGVhcihcInRcIik7XG4gICAgY3kuZ2V0KCdbZGF0YS10ZXN0aWQ9XCJuYW1lLWlucHV0XCJdID4gLmlucHV0LWZpZWxkJykudHlwZShcInRlc3RcIik7XG4gICAgY3kuZ2V0KCdbZGF0YS10ZXN0aWQ9XCJzdXJuYW1lLWlucHV0XCJdID4gLmlucHV0LWZpZWxkJykuY2xlYXIoXCJ1XCIpO1xuICAgIGN5LmdldCgnW2RhdGEtdGVzdGlkPVwic3VybmFtZS1pbnB1dFwiXSA+IC5pbnB1dC1maWVsZCcpLnR5cGUoXCJ1c2VyXCIpO1xuICAgIGN5LmdldCgnW2RhdGEtdGVzdGlkPVwicGFzc3dvcmQtaW5wdXRcIl0gPiAuaW5wdXQtZmllbGQnKS5jbGVhcihcInBcIik7XG4gICAgY3kuZ2V0KCdbZGF0YS10ZXN0aWQ9XCJwYXNzd29yZC1pbnB1dFwiXSA+IC5pbnB1dC1maWVsZCcpLnR5cGUoXCJwYXN3d29yZFwiKTtcbiAgICBjeS5nZXQoJ1tkYXRhLXRlc3RpZD1cImNvbmZpcm0tcGFzc3dvcmQtaW5wdXRcIl0gPiAuaW5wdXQtZmllbGQnKS5jbGVhcihcInBcIik7XG4gICAgY3kuZ2V0KCdbZGF0YS10ZXN0aWQ9XCJjb25maXJtLXBhc3N3b3JkLWlucHV0XCJdID4gLmlucHV0LWZpZWxkJykudHlwZShcbiAgICAgIFwicGFzc3dvcmRcIlxuICAgICk7XG4gICAgY3kuZ2V0KFwiI3N1Ym1pdC1idXR0b24gPiAuZ3JhZGllbnRcIikuY2xpY2soKTtcblxuICAgIC8vIFRha2UgYSBzbmFwc2hvdCBhZnRlciBzdWJtaXR0aW5nIHRoZSBmb3JtXG4gICAgY3kuZG9jdW1lbnQoKS50b01hdGNoSW1hZ2VTbmFwc2hvdCgpO1xuXG4gICAgY3kuZ2V0KCdbZGF0YS10ZXN0aWQ9XCJjb2RlLWlucHV0LTBcIl0nKS5jbGVhcihcIjFcIik7XG4gICAgY3kuZ2V0KCdbZGF0YS10ZXN0aWQ9XCJjb2RlLWlucHV0LTBcIl0nKS50eXBlKFwiMVwiKTtcbiAgICBjeS5nZXQoJ1tkYXRhLXRlc3RpZD1cImNvZGUtaW5wdXQtMVwiXScpLmNsZWFyKFwiMlwiKTtcbiAgICBjeS5nZXQoJ1tkYXRhLXRlc3RpZD1cImNvZGUtaW5wdXQtMVwiXScpLnR5cGUoXCIyXCIpO1xuICAgIGN5LmdldCgnW2RhdGEtdGVzdGlkPVwiY29kZS1pbnB1dC0yXCJdJykuY2xlYXIoXCIzXCIpO1xuICAgIGN5LmdldCgnW2RhdGEtdGVzdGlkPVwiY29kZS1pbnB1dC0yXCJdJykudHlwZShcIjNcIik7XG4gICAgY3kuZ2V0KCdbZGF0YS10ZXN0aWQ9XCJjb2RlLWlucHV0LTNcIl0nKS5jbGVhcihcIjRcIik7XG4gICAgY3kuZ2V0KCdbZGF0YS10ZXN0aWQ9XCJjb2RlLWlucHV0LTNcIl0nKS50eXBlKFwiNFwiKTtcbiAgICBjeS5nZXQoJ1tkYXRhLXRlc3RpZD1cImNvZGUtaW5wdXQtNFwiXScpLmNsZWFyKFwiNVwiKTtcbiAgICBjeS5nZXQoJ1tkYXRhLXRlc3RpZD1cImNvZGUtaW5wdXQtNFwiXScpLnR5cGUoXCI1XCIpO1xuICAgIGN5LmdldCgnW2RhdGEtdGVzdGlkPVwiY29kZS1pbnB1dC01XCJdJykuY2xlYXIoXCI2XCIpO1xuICAgIGN5LmdldCgnW2RhdGEtdGVzdGlkPVwiY29kZS1pbnB1dC01XCJdJykudHlwZShcIjZcIik7XG4gICAgY3kuZ2V0KFwiI3N1Ym1pdC1idXR0b24gPiAuZ3JhZGllbnRcIikuY2xpY2soKTtcblxuICAgIC8vIFRha2UgYSBmaW5hbCBzbmFwc2hvdCBhZnRlciBzdWJtaXR0aW5nIHRoZSB2ZXJpZmljYXRpb24gY29kZVxuICAgIGN5LmRvY3VtZW50KCkudG9NYXRjaEltYWdlU25hcHNob3QoKTtcblxuICAgIC8qID09PT0gRW5kIEN5cHJlc3MgU3R1ZGlvID09PT0gKi9cbiAgfSk7XG59KTtcbiJdLCJuYW1lcyI6WyJkZXNjcmliZSIsIml0IiwiY3kiLCJ2aXNpdCIsIndhaXQiLCJkb2N1bWVudCIsInRvTWF0Y2hJbWFnZVNuYXBzaG90IiwiZ2V0IiwiY2xpY2siLCJjbGVhciIsInR5cGUiXSwic291cmNlUm9vdCI6IiJ9