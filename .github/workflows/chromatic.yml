name: Main Branch Build and Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  build_projects:
    name: Release build and tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build projects
        run: pnpm build

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: |
            **/coverage/*
            !**/node_modules/**

  run-cypress:
    name: Cypress Test
    runs-on: ubuntu-latest
    needs: build_projects

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: pnpm install

      - name: Start server
        run: pnpm run dev &

      - name: Wait for server to be ready
        run: |
          for i in {1..20}; do
            if curl -s http://localhost:3000; then
              echo "Server is up!"
              break
            else
              echo "Waiting for server to start..."
              sleep 3
            fi
          done

      - name: Cypress Run
        uses: cypress-io/github-action@v5
        with:
          browser: chrome
          start: pnpm run dev

  run-chromatic:
    name: Chromatic Visual Regression
    runs-on: ubuntu-latest
    needs: run-cypress

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: pnpm install

      - name: Run Chromatic
        uses: chromaui/action@latest
        with:
          projectToken: ${{ secrets.CHROMATIC_NEW_PROJECT_TOKEN }}
          exitZeroOnChanges: true
          onlyChanged: true
          zip: true
